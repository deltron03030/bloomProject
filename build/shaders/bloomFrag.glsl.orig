#version 330

out vec4 FragColor;

in vec2 TexCoords;

#define NUM_LAYERS 5
uniform sampler2D screenTexture;
uniform sampler2D bloomTextures[NUM_LAYERS];
uniform float exposure;
uniform bool bloom;

float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

void main() {
    const float gamma = 2.2;
    vec3 hdrColor = texture(screenTexture, TexCoords).rgb;
    if (bloom){
        for (int i=0; i<NUM_LAYERS; i++)
        {
            vec3 bloomColor = texture(bloomTextures[i], TexCoords).rgb;
            //float fraction = pow(0.9, NUM_LAYERS);
            //hdrColor += bloomColor * weight[i];
            hdrColor += bloomColor;
        }
    }
    // tone mapping
    vec3 result = vec3(1.0) - exp(-hdrColor * exposure);
    // also gamma correct while we're at it
    result = pow(result, vec3(1.0 / gamma));
    FragColor = vec4(result, 1.0);
}
